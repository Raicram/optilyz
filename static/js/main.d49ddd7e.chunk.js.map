{"version":3,"sources":["config.ts","api/axios.ts","components/inputSearch.tsx","components/loading.tsx","components/movieTemplate.tsx","components/mainTemplate.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL_FULL","process","axios","axiosInterface","create","baseURL","timeout","getMovies","a","s","type","y","get","params","result","data","Wrapper","styled","div","Label","InputArea","Button","button","Input","input","Select","select","InputSearch","setResponse","initialValues","validate","values","errors","onSubmit","setSubmitting","setTimeout","response","touched","handleChange","handleBlur","handleSubmit","isSubmitting","name","onChange","onBlur","value","disabled","BounceAnimation","keyframes","DotWrapper","Dot","delay","Loading","MovieWrapper","Info","H2","h2","Title","p","Img","img","Text","span","MovieTemplate","search","useState","movieErr","setMovieErr","useEffect","map","item","src","Poster","alt","Year","Type","imdbID","MainTemplate","undefined","Search","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d49ddd7e.chunk.js","sourcesContent":["import axiosInterface  from 'axios'\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const API_URL_FULL = `${API_URL}${API_KEY}`;\r\n\r\n\r\nexport const axios = axiosInterface.create({\r\n    baseURL: API_URL_FULL,\r\n    timeout: 2000,\r\n});","import { AxiosResponse} from 'axios'\r\nimport { axios } from 'src/config'\r\n\r\ninterface IValues {\r\n    s: string\r\n    type?: string\r\n    y?: string;\r\n}\r\n\r\nexport const getMovies = async ({s, type, y}: IValues): Promise<AxiosResponse<Object>> => { \r\n    const result = await axios.get('', {params: {s, type, y }})\r\n    return result.data;\r\n}","import React from 'react'\r\nimport { Formik } from 'formik'\r\nimport { getMovies } from 'src/api/axios'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: column;\r\n`;\r\n\r\n\r\nconst Label = styled.div`\r\n  font-size: 22px;\r\n  line-height: 27px;\r\n`;\r\n\r\nconst InputArea = styled.div`\r\n  display: flex;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  color: white;\r\n  font-family: Helvetica, Arial, Sans-Serif;\r\n  font-size: 20px;\r\n  text-decoration: none;\r\n  text-shadow: -1px -1px 1px #616161;\r\n  position: relative;\r\n  padding: 15px 30px;\r\n  box-shadow: 5px 5px 0 #666;\r\n  transition: all 0.3s ease;\r\n  margin: 0 10px 0 0;\r\n  background-color: #9a8194;\r\n  cursor: pointer;\r\n  \r\n    &:hover{\r\n      box-shadow: 0px 0px 0 #666;\r\n      box-shadow: 0px 0px 0 #666;\r\n      top: 5px;\r\n      left: 5px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: none;\r\n    border-bottom: 1px solid black;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    margin: 0 10px;\r\n    height: 22px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    border: none;\r\n    border-bottom: 1px solid black;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    margin: 0 10px;\r\n    height: 30px;\r\n`;\r\n\r\n\r\n\r\ninterface IResponse {\r\n    setResponse: (respons: any) => void;\r\n}\r\n\r\ninterface IErrors {\r\n    s: string;\r\n}\r\n\r\nconst InputSearch: React.FC<IResponse> = ({setResponse}) => {\r\n    return(\r\n        <Wrapper>\r\n         <Formik\r\n            initialValues={{ s: '', type: '', y: ''}}\r\n            validate={values => {\r\n                const errors: IErrors = {} as IErrors;\r\n                if (!values.s) {\r\n                  errors.s = 'Required';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(async () => {\r\n                    const response = await getMovies(values)\r\n                    setResponse(response)\r\n                  setSubmitting(false);\r\n                }, 400);\r\n              }}\r\n            >\r\n        {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                \r\n                <InputArea>\r\n                  <Label>\r\n                    Title:\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"s\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.s}\r\n                  />\r\n                {errors.s && touched.s && errors.s}\r\n                </InputArea>\r\n                <InputArea>\r\n                <Label>\r\n                    Type:\r\n                  </Label>\r\n                  <Select\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.type}\r\n                  >\r\n                    <option value={''}> </option>\r\n                    <option value={'movie'}>Movie</option>\r\n                    <option value={'series'}>Series</option>\r\n                    <option value={'episode'}>Episode</option>\r\n                    </Select>\r\n                </InputArea>\r\n                <InputArea>\r\n                  <Label>\r\n                    year:\r\n                  </Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"y\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.y}\r\n                  />\r\n                </InputArea>\r\n                <Button type=\"submit\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default InputSearch","import React  from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\ninterface IDelay {\r\n    delay: string;\r\n}\r\n\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 15px }\r\n  100% { margin-bottom: 0 }\r\n`;\r\nconst DotWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  align-self: center;\r\n  height: 30vh;\r\n  width: 100%;\r\n`;\r\nconst Dot = styled.div`\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n  /* Animation */\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${({delay}: IDelay) => delay};\r\n`;\r\n\r\n\r\nconst Loading = () => (\r\n    <DotWrapper>\r\n        <Dot delay=\"0s\" />\r\n        <Dot delay=\".1s\" />\r\n        <Dot delay=\".2s\" />\r\n    </DotWrapper>\r\n)\r\n\r\nexport default Loading","import React, { useEffect, useState }  from 'react'\r\nimport styled  from 'styled-components'\r\nimport Loading from 'src/components/loading'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: #ebd8b7;\r\n    border-radius: 5px;\r\n    padding: 50px;\r\n    margin-top: 25px;\r\n\r\n    @media (max-width: 600px){\r\n        padding: 20px;\r\n    }\r\n`;\r\n\r\nconst MovieWrapper = styled.div`\r\n    background-color: #c6a9a3;\r\n    padding: 20px;\r\n    margin: 25px 0;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    gap: 25px;\r\n\r\n    @media (max-width: 600px){\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst Info = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media (max-width: 600px){\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst H2 = styled.h2`\r\n    color: #9a8194;\r\n    font-size: 35px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n    font-size: 23px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    max-width: 150px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n`;\r\n\r\ninterface Search {\r\n    Title: string;\r\n    Poster: string;\r\n    Type: string;\r\n    Year: string;\r\n    imdbID: string;\r\n}\r\n\r\ninterface IMovieResponse {\r\n    search: Search[];\r\n}\r\n\r\nconst MovieTemplate: React.FC<IMovieResponse> = ({search}) => {\r\n    const [movieErr, setMovieErr] = useState(0);\r\n\r\n    const handleMovieError = () => {\r\n        setTimeout(() => {\r\n            setMovieErr(movieErr => movieErr+1)\r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!search) handleMovieError();\r\n        else setMovieErr(0)\r\n    },[search, movieErr])\r\n\r\n\r\n    return !search ?(\r\n        movieErr<5? <Loading /> : <p>No Movie Found</p>\r\n    ):(\r\n        <Wrapper>\r\n            <H2>Movie list:</H2>\r\n            {\r\n                search.map((item) => \r\n                    <MovieWrapper key={item.imdbID}>\r\n                        <Img src={item.Poster} alt={item.Title} />\r\n                        <Info>\r\n                            <Title>{item.Title}</Title>\r\n                            <div>\r\n                                <Text>Year: {item.Year}</Text>\r\n                            </div>\r\n                            <div>\r\n                                <Text>Type: {item.Type}</Text>\r\n                            </div>\r\n                        </Info>\r\n                    </MovieWrapper>\r\n                )\r\n            }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieTemplate","import React, { useState , useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport InputSearch from 'src/components/inputSearch'\r\nimport MovieTemplate from 'src/components/movieTemplate'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1300px;\r\n  margin: 25px auto;\r\n  padding: 25px;\r\n  min-height: 80vh;\r\n\r\n  @media (max-width: 600px){\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\ninterface IResponse {\r\n        Response: string;\r\n        Search: any;\r\n}\r\n\r\nconst MainTemplate: React.FC = () => {\r\n    const [response , setResponse] = useState<IResponse | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n    },[response])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <InputSearch setResponse={setResponse}/>\r\n            {response&&<MovieTemplate search={response.Search}/>}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default MainTemplate\r\n","import React from 'react';\nimport styled from 'styled-components'\nimport MainTemplate from 'src/components/mainTemplate'\n\nconst Wrapper = styled.div` \n  width: 100%;\n  background-color: #99bbad;\n  margin: 0;\n  height: 100%;\n  min-height: 100vh;\n  overflow: hidden;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <MainTemplate />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}